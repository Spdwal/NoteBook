* 认识 HTML
  根据 web 页面的 HTML，浏览器可以了解到显示页面所需要的全部信息。
  web 服务器等待来自 Web 浏览器的请求，当服务器收到请求时，会查找所请求的资源，然后将资源发给浏览器。
** 标签
   浏览器通常显示的标题有 6 级，从<h1>到<h6>。字体由大到小。
   <html>标记告诉浏览器你的文档时一个 HTML 文件。
   注释写法为：<!-- -->。
   <head></head>包含 web 页面的有关信息，<title>包含页面窗口顶部的内容。
   <body>内部包含页面的主体内容。
   <p>标记一个文本块，这是一个段落，其中可以有一个或者多个句子。
   元素 ＝ 开始标记 ＋ 内容 ＋ 结束标记
   大多数空白（回车，TAB， 空格）都会被忽略。
** 属性
   元素可以有属性，通过属性，可以提供一个元素的附加信息。
   #+BEGIN_SRC HTML5
   <html>
     <head>
       <title></title>
       <style type="text/css">
         body{
         }
       </style>
     </head>
     <body>
     </body>
   </html>
   #+END_SRC
   其中 body 表示{}内的 CSS 要应用与<body></body>内。
* 深入了解超文本
** 创建一个链接
   要创造链接，需要使用<a>元素。
   #+BEGIN_SRC HTML5
   <a href="XXX/XXX">nameString</a>
   #+END_SRC
   <a>元素创建指向另一个页面的链接。
** 创建一个图片
   #+BEGIN_SRC HTML5
   <img src="xxxxx">
   #+END_SRC
   属性的写法都一样，首先是属性名，后面是一个等于号，然后是用双引号括起来的属性值。
** 文件的组织
   将各种资源放在不同的文件夹中维护，网站也会更加容易管理。
   可以利用路径来规划，具体使用类似与 linux 文件路径。
* 构建模块
  + 草图
  + 略图
  + 网页
** q 与 blockquote
   q 与 blockquote 都是引用，但是两者之间有着本质的区别，blockquote 是一个块元素，q 是一个内联元素，块元素显示时就好像前后各有一个换行，而内联元素在页面文本流中总是在行内出现。
   设计一个页面时，一般先从较大的块开始，然后在完善页面时再加入内联元素。
** br 元素
   br 元素唯一的任务就是提供一个换行符。
   它是一个没有任何内容的元素，因为它只是一个换行，并没有其它内容。
   它并不是唯一没有实际内容的元素，还有很多类似的元素，我们把它叫作 void 元素。比如 br，img。它们只需要使用一个开始标记。
** 列表
   要创建一个列表，需要将每个列表项放在单独的<li>元素中。这说明需要把内容用一个开始标记和一个结束标记包围起来。
   然后将列表项用<ol></ol>或者<ul></ul>包围起来，如果使用 ul，则这些列表项将作为一个无序列表显示，如果使用 ol，则作为无序列表显示。
   还有一种列表叫定义列表，它用 dl 包围。列表中每一项都有一个定义术语 dt 和一个定义描述 dd。
** 嵌套
   元素和元素之间可以嵌套，但是你需要时候注意标记不匹配的清况。如下：
   #+BEGIN_SRC ruby
   <p>I'm going to street<em>this</p></em>
   #+END_SRC
** 特殊字符
   > ---> &gt
   < ---> &lt
   如果希望 HTML 内容中出现一个&，则可以使用字符实体：&amp，而不是直接使用字符&。
* 链接，在 web 上发布自己的网站
  HTTP 也称为超文本传送斜议，尽管超文本通常只指 HTML 页面，但是这个斜议实际上可以用来传送图像或者 web 页面需要的其它任何文件。
  每次在地址栏中输入一个 url，浏览器就会使用 HTTP 向服务器请求相应的资源。如果服务器找到这个资源，就会把它返回给浏览器。如果服务器找不到这个资源，就会返回 404 错误。
  服务器需要绝对路径来找到你请求的文件，如果服务器没有得到绝对路径，它就不知道取哪里查找。
  单击一个相对链接时，在后台浏览器会根据这个相对路径和所单击的页面的路径创建一个绝对路径。
  如果只接收到一个网站名而没有指定路径名，则服务器会尝试查找目录中的一个默认文件，通常默认文件名为 index.html 或者 default.html。
  所以如果要从根目录默认返回一个文件，只需要将它命名为 index.html 或者 default.html。
  url 并不只是从浏览器输入，也可以在 HTML 中使用，例如在<a>中使用。
  相对路径只用来链接同一个网站内的页面，url 通常用来链接其它网站。
  :8000 是一个可以放在 HTTP URL 中的可选的端口，通常 web 上的所有东西都会传送到一个默认端口(80)，不过元素 web 服务器会配置为在另外一个不同的端口接收请求，如 8000.
  这种清况通常在测试服务器上出现，如果没有指定端口，则默认为 80.
** 特殊属性
   <a>有一个 title 属性，鼠标移动到链接上，就会显示 title 属性。
   <a>还有一个 id 属性，允许直接访问页面中的一个特定点。
   用例如下：
   #+BEGIN_SRC HTML5
   <h2 id="chai">Chai Tea </h2>
   <a href="index.html#chai">See Chai Tea</a>
   #+END_SRC
   + 找到页面中希望创建锚点的位置，可以是页面上任何文本，不过通常是标题。
   + 为目标选择一个标示符名字，标准元素的开始标记里插入一个属性。
   如果元素有多个属性，它们的顺序并不重要。
   可以为任何元素添加 title 属性。
   可以为任意元素添加 id 属性。
** target 属性
   target 会告诉浏览器页面的目标窗口，如果使用_blank 作为目标，浏览器就总是打开一个新窗口来显示页面。有些浏览器也会打开一个新标签页来打开页面。
* 认识媒体
  浏览器在看到一个 img 元素时，必须先获取这个图像。
  各种图像适和承担的任务不一样：
  JPEG：适和连续色调图片，如照片。
  PNG：适和单色图像和线条构成的图像，它会压缩图像大小，但是不会丢失信息，同时还允许将颜色设置为透明。
  GIF：也支持透明色，但是只允许将一种颜色设置为透明，GIF 文件往往比相应的 JPEG 文件大，它还支持显示动图。
** img 元素解密
   src 属性不只是用于相对链接，还可以将 src 属性中放入 URL，图像与 HTML 页面一同存储在 Web 服务器上，所以 Web 上每个图像都有自己的 URL。
   对与相同网站上的链接和图像，最好使用相对路径。
   img 一定要提供候选格式，使用 _alt_ 属性为访问者提供一些暗示，告诉它们图像里有什么信息。
   也可以给 img 的 _width_ ， _height_ 属性设定图像大小。
   #+BEGIN_SRC HTML5
   <img src="XXXXXXXX" alt="XXXXXXX" width="40" height="100">
   #+END_SRC
   也可以使用 ps 来调整图像大小。
** 图片的组织
   可以将缩略图和原图分开放置，然后为原图创建一个单独的文件夹，存储所有的单独存储这些图像的页面。
   然后要链接到图像，需要将<img>元素放在<a>元素里面嵌套。
   例如：
   #+BEGIN_SRC HTML5
   <a href="URL">
     <img src="picture url"
          alt="some message">
   </a>
   #+END_SRC
   要确保链接，缩略图，页面能正确对应。
* 标准及其它
  HTML5:之后唯一的 HTML 标准。不会再有 6,7,8 等等。它会随着技术的发展形成文档。
  HTML5:doctype
  <!doctype html>   -->   告诉浏览器我们在使用 HTML，不用再担心特定的版本号或者语言，也不用指向某个标准。
** 指定字符编码
   使用 meta 来指定字符编码。
   <meta charset="utf-8">
   meta 表示我们要告诉浏览器关于页面的一些信息。
   meta 标签放在 head 元素中，要记得 head 元素包含所有关于页面得信息。
** HTML 编写指南
   + 一定要用 doctype 开头。
   + html 元素不能缺失，它必须示 Web 页面得最顶层元素或者根元素。
   + 所有其它元素都必须放在 head 和 body 里面。
   + 在 head 里包含正确得字符编码。
   + 一定要在 head 里添加 title 元素。
   + 嵌套元素时要当心
   + 一定要记得检查属性，有些标签确少属性就几乎不能使用。
* CSS 入门
  目前我们所有得使用得 CSS 规则都会为段落定义样式。
  要为 HTML 直接添加 CSS 样式的话，要在 head 元素中添加 style 标签，然后将 CSS 规则放在里面。
  下面列出一些常用 CSS
  font-family:  字体
  color:        颜色
  border-bottom:下边框外观
  


  
   

  


  
